# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: Java CI with Maven

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK 11
      uses: actions/setup-java@v2
      with:
        java-version: '11'
        distribution: 'temurin'
        cache: maven
    - name: Build with Maven
      run: mvn clean install
      
    - name: Build & push Docker image
      uses: mr-smithers-excellent/docker-build-push@v5  
      with:
        image: 22101989/devops-homework
        tags: latest
        registry: docker.io
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
      
    deploy:
    needs: build
    
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout files
        uses: actions/checkout@v2
        
      - name: Install doctl
        uses: digitalocean/action-doctl@v2
        with:
          token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}
          
      #To make sure that application always available
      - name: Check if server exist
        run: doctl compute droplet get weather-server
        
      #- name: Create weather-server if NOT exist, If EXIST remove it and create new
      - if: ${{ failure() }}
        name: Create new servers
        run: |
          doctl compute droplet create weather-server --image docker-18-04 --tag-name weather-app --size s-1vcpu-1gb --region nyc1 --user-data-file create-app.sh --wait
          doctl compute droplet create weather-server-2 --image docker-18-04 --tag-name weather-app --size s-1vcpu-1gb --region nyc1 --user-data-file create-app.sh --wait
      - if: ${{ success() }}
        name: If exist, remove and create new with 5 minutes delay.
        run: | 
          doctl compute droplet delete weather-server -f
          doctl compute droplet create weather-server --image docker-18-04 --tag-name weather-app --size s-1vcpu-1gb --region nyc1 --user-data-file create-app.sh --wait
          sleep 300
          doctl compute droplet delete weather-server-2 -f
          doctl compute droplet create weather-server-2 --image docker-18-04 --tag-name weather-app --size s-1vcpu-1gb --region nyc1 --user-data-file create-app.sh --wait
          exit 0
